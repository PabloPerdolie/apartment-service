/*
Тестовое задание для отбора на Backend Bootcamp

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HouseCreatePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HouseCreatePostRequest{}

// HouseCreatePostRequest struct for HouseCreatePostRequest
type HouseCreatePostRequest struct {
	// Адрес дома
	Address string `json:"address"`
	// Год постройки дома
	Year int32 `json:"year"`
	// Застройщик
	Developer NullableString `json:"developer,omitempty"`
}

type _HouseCreatePostRequest HouseCreatePostRequest

// NewHouseCreatePostRequest instantiates a new HouseCreatePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHouseCreatePostRequest(address string, year int32) *HouseCreatePostRequest {
	this := HouseCreatePostRequest{}
	this.Address = address
	this.Year = year
	return &this
}

// NewHouseCreatePostRequestWithDefaults instantiates a new HouseCreatePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHouseCreatePostRequestWithDefaults() *HouseCreatePostRequest {
	this := HouseCreatePostRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *HouseCreatePostRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *HouseCreatePostRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *HouseCreatePostRequest) SetAddress(v string) {
	o.Address = v
}

// GetYear returns the Year field value
func (o *HouseCreatePostRequest) GetYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Year
}

// GetYearOk returns a tuple with the Year field value
// and a boolean to check if the value has been set.
func (o *HouseCreatePostRequest) GetYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Year, true
}

// SetYear sets field value
func (o *HouseCreatePostRequest) SetYear(v int32) {
	o.Year = v
}

// GetDeveloper returns the Developer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HouseCreatePostRequest) GetDeveloper() string {
	if o == nil || IsNil(o.Developer.Get()) {
		var ret string
		return ret
	}
	return *o.Developer.Get()
}

// GetDeveloperOk returns a tuple with the Developer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HouseCreatePostRequest) GetDeveloperOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Developer.Get(), o.Developer.IsSet()
}

// HasDeveloper returns a boolean if a field has been set.
func (o *HouseCreatePostRequest) HasDeveloper() bool {
	if o != nil && o.Developer.IsSet() {
		return true
	}

	return false
}

// SetDeveloper gets a reference to the given NullableString and assigns it to the Developer field.
func (o *HouseCreatePostRequest) SetDeveloper(v string) {
	o.Developer.Set(&v)
}

// SetDeveloperNil sets the value for Developer to be an explicit nil
func (o *HouseCreatePostRequest) SetDeveloperNil() {
	o.Developer.Set(nil)
}

// UnsetDeveloper ensures that no value is present for Developer, not even an explicit nil
func (o *HouseCreatePostRequest) UnsetDeveloper() {
	o.Developer.Unset()
}

func (o HouseCreatePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HouseCreatePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["year"] = o.Year
	if o.Developer.IsSet() {
		toSerialize["developer"] = o.Developer.Get()
	}
	return toSerialize, nil
}

func (o *HouseCreatePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"year",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHouseCreatePostRequest := _HouseCreatePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHouseCreatePostRequest)

	if err != nil {
		return err
	}

	*o = HouseCreatePostRequest(varHouseCreatePostRequest)

	return err
}

type NullableHouseCreatePostRequest struct {
	value *HouseCreatePostRequest
	isSet bool
}

func (v NullableHouseCreatePostRequest) Get() *HouseCreatePostRequest {
	return v.value
}

func (v *NullableHouseCreatePostRequest) Set(val *HouseCreatePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHouseCreatePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHouseCreatePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHouseCreatePostRequest(val *HouseCreatePostRequest) *NullableHouseCreatePostRequest {
	return &NullableHouseCreatePostRequest{value: val, isSet: true}
}

func (v NullableHouseCreatePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHouseCreatePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

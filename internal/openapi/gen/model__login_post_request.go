/*
Тестовое задание для отбора на Backend Bootcamp

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LoginPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginPostRequest{}

// LoginPostRequest struct for LoginPostRequest
type LoginPostRequest struct {
	// Идентификатор пользователя
	Id *string `json:"id" validate:"required,len=36"`
	// Пароль пользователя
	Password *string `json:"password" validate:"required,min=8"`
}

// NewLoginPostRequest instantiates a new LoginPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginPostRequest() *LoginPostRequest {
	this := LoginPostRequest{}
	return &this
}

// NewLoginPostRequestWithDefaults instantiates a new LoginPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginPostRequestWithDefaults() *LoginPostRequest {
	this := LoginPostRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoginPostRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPostRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoginPostRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LoginPostRequest) SetId(v string) {
	o.Id = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *LoginPostRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPostRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *LoginPostRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *LoginPostRequest) SetPassword(v string) {
	o.Password = &v
}

func (o LoginPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableLoginPostRequest struct {
	value *LoginPostRequest
	isSet bool
}

func (v NullableLoginPostRequest) Get() *LoginPostRequest {
	return v.value
}

func (v *NullableLoginPostRequest) Set(val *LoginPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginPostRequest(val *LoginPostRequest) *NullableLoginPostRequest {
	return &NullableLoginPostRequest{value: val, isSet: true}
}

func (v NullableLoginPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
